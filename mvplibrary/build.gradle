apply plugin: 'com.android.library'

android {
    signingConfigs {
        debug {
            storeFile file('H:\\healthy\\Patient\\mvplibrary\\health.keystore')
            keyAlias = 'health'
            storePassword '123456'
            keyPassword '123456'
        }
        release {
            storeFile file('H:\\healthy\\Patient\\mvplibrary\\health.keystore')
            storePassword '123456'
            keyAlias = 'health'
            keyPassword '123456'
        }
    }
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]


    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
                includeCompileClasspath = true
            }
        }

    }
    //兼容10.0
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }



    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '28.0.0'
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    tasks.withType(JavaCompile) { options.encoding = "UTF-8" }
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["eretrofit-convertr-gson"]
    api rootProject.ext.dependencies["retrofit-adapter-rxjava"]
    api rootProject.ext.dependencies["converter-scalars"]
    api rootProject.ext.dependencies["okhttp3"]
    api rootProject.ext.dependencies["gson"]

    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    implementation 'com.alibaba:arouter-api:1.3.1'
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'
    implementation 'com.ypx.yimagepicker:androidx:3.0.1'


    implementation  'com.github.bumptech.glide:glide:4.9.0'
    implementation 'com.github.bumptech.glide:compiler:4.9.0'
    api rootProject.ext.dependencies["dagger2"]
    api rootProject.ext.dependencies["rxjava2"]
    api rootProject.ext.dependencies["banner"]
    api rootProject.ext.dependencies["glide"]
    api rootProject.ext.dependencies["XBanner"]
    api rootProject.ext.dependencies["tablelayout"]
    api rootProject.ext.dependencies["table"]
//    implementation rootProject.ext.dependencies["dagger2-apt-compiler"]
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["autolayout"]
    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'
    implementation 'com.alibaba:arouter-api:1.3.1'
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'
    //    # 必选，可兼容市面上绝大部分设备
    implementation 'com.github.dueeeke.dkplayer:dkplayer-java:2.5.5'
    implementation 'com.github.dueeeke.dkplayer:dkplayer-armv7a:2.5.5'

//    # 可选，用于兼容一些其他的CPU架构
    implementation 'com.github.dueeeke.dkplayer:dkplayer-armv5:2.5.5'
    implementation 'com.github.dueeeke.dkplayer:dkplayer-arm64:2.5.5'
    implementation 'com.github.dueeeke.dkplayer:dkplayer-x86:2.5.5'
    implementation 'com.github.dueeeke.dkplayer:dkplayer-x86_64:2.5.5'

//    # 可选，里面包含StandardVideoController的实现
    implementation 'com.github.dueeeke.dkplayer:dkplayer-ui:2.5.5'
//  frace
    api rootProject.ext.dependencies["fresco"]
    api rootProject.ext.dependencies["fresco-base"]
    api rootProject.ext.dependencies["fresco-gif"]
    api rootProject.ext.dependencies["fresco-webpsupport"]
    api rootProject.ext.dependencies["fresco-webp"]


    api rootProject.ext.dependencies["flowlayout-lib"]
    api rootProject.ext.dependencies["ViewAdapterHelper"]
    api rootProject.ext.dependencies["zxing-library"]
    api rootProject.ext.dependencies["dkplayer-java"]
    api rootProject.ext.dependencies["dkplayer-armv7a"]
    api rootProject.ext.dependencies["dkplayer-armv5"]
    api rootProject.ext.dependencies["dkplayer-arm64"]
    api rootProject.ext.dependencies["dkplayer-x86"]
    api rootProject.ext.dependencies["dkplayer-x86_64"]
    api rootProject.ext.dependencies["dkplayer-ui"]
    api rootProject.ext.dependencies["recyclerview-v7"]

}
